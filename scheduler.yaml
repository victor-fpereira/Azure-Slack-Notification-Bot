# .github/workflows/monitor-workhours.yml
name: Monitor during work hours

on:
  schedule:
    - cron: "0 8 * * 1-5"
    - cron: "0 13 * * 1-5"
    - cron: "0 18 * * 1-5"
  workflow_dispatch:

concurrency:
  group: monitor-workhours
  cancel-in-progress: true

jobs:
  run-monitor:
    runs-on: ubuntu-latest
    environment: slack_bot   # <- must match the environment that holds the secrets
    # Keep below your org's job max. 300 = 5h, 270 = 4.5h, etc.
    timeout-minutes: 300

    env:
      PYTHON_VERSION: "3.11"
      RUN_FOR_MINUTES: "270"   # adjust to 240..300 as you prefer

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Debug Show current dir and files
      #   run: |
      #     pwd
      #     ls -alR

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Ensure secrets are present (fail fast)
        env:
          AZURE_PAT: ${{ secrets.AZURE_PAT }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          [ -n "${AZURE_PAT}" ] || { echo "Missing AZURE_PAT"; exit 1; }
          [ -n "${SLACK_WEBHOOK}" ] || { echo "Missing SLACK_WEBHOOK"; exit 1; }

      # Run your script with secrets injected as environment variables
      - name: Run monitor with secrets
        env:
          AZURE_PAT: ${{ secrets.AZURE_PAT }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          set -e
          echo "Starting monitor for $RUN_FOR_MINUTES minutes..."
          timeout "${RUN_FOR_MINUTES}m" python bot-get-tickets-qa.py || code=$?
          if [ "${code:-0}" = "124" ]; then
            echo "Time window reached; stopping gracefully."
            exit 0
          fi
          exit "${code:-0}"
